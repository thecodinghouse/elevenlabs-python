# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
from .chapter_with_content_response_model_state import ChapterWithContentResponseModelState
from .chapter_statistics_response import ChapterStatisticsResponse
from .chapter_content_response_model import ChapterContentResponseModel
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class ChapterWithContentResponseModel(UncheckedBaseModel):
    chapter_id: str
    name: str
    last_conversion_date_unix: typing.Optional[int] = None
    conversion_progress: typing.Optional[float] = None
    can_be_downloaded: bool
    state: ChapterWithContentResponseModelState
    statistics: typing.Optional[ChapterStatisticsResponse] = None
    last_conversion_error: typing.Optional[str] = None
    content: ChapterContentResponseModel

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
